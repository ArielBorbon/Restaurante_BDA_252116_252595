/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ModuloIngredientes;

import BO.IngredienteBO.IngredienteBO;
import DTOS.Ingredientes.NuevoIngredienteDTO;
import Fabricas.FabricaIngredientes;
import NegocioException.NegocioException;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author PC Gamer
 */
public class ModuloPrincipalIngredientes extends javax.swing.JFrame {
    private FormIngredientesTabla formTabla =  new FormIngredientesTabla();
    /**
     * Creates new form Ingredientes
     * @throws NegocioException.NegocioException
     */
    public ModuloPrincipalIngredientes() throws NegocioException {
        initComponents();  
        formTabla.setVisible(true);
        this.pnlFormIngredientes.add(formTabla);
        getContentPane().setBackground(new Color(0x4dd3e0));
    }

    
    
    
    //
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblIngredientes = new javax.swing.JLabel();
        pnlFormIngredientes = new javax.swing.JPanel();
        btnAgregarIngrediente = new javax.swing.JButton();
        btnActualizarIngrediente = new javax.swing.JButton();
        btnEliminarIngrediente = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblIngredientes.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        lblIngredientes.setText("Modulo Ingredientes");

        pnlFormIngredientes.setPreferredSize(new java.awt.Dimension(638, 521));
        pnlFormIngredientes.setLayout(new java.awt.BorderLayout());

        btnAgregarIngrediente.setBackground(new java.awt.Color(153, 255, 153));
        btnAgregarIngrediente.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnAgregarIngrediente.setText("Agregar Ingrediente");
        btnAgregarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarIngredienteActionPerformed(evt);
            }
        });

        btnActualizarIngrediente.setBackground(new java.awt.Color(204, 204, 204));
        btnActualizarIngrediente.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnActualizarIngrediente.setText("Actualizar Ingrediente");
        btnActualizarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarIngredienteActionPerformed(evt);
            }
        });

        btnEliminarIngrediente.setBackground(new java.awt.Color(255, 51, 51));
        btnEliminarIngrediente.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnEliminarIngrediente.setText("Eliminar Ingrediente");
        btnEliminarIngrediente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarIngredienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlFormIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(lblIngredientes)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEliminarIngrediente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnActualizarIngrediente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregarIngrediente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(lblIngredientes)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlFormIngredientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(btnAgregarIngrediente)
                        .addGap(60, 60, 60)
                        .addComponent(btnActualizarIngrediente)
                        .addGap(62, 62, 62)
                        .addComponent(btnEliminarIngrediente)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarIngredienteActionPerformed
        JTable tabla = formTabla.getTablaIngredientes();
            int filaSeleccionada = tabla.getSelectedRow();
        
            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(this, "Por favor selecciona un ingrediente de la tabla.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
        
            String nombre = tabla.getValueAt(filaSeleccionada, 0).toString();
            String unidadMedida = tabla.getValueAt(filaSeleccionada, 1).toString();
        
            String inputStock = JOptionPane.showInputDialog(this, "Ingresa el nuevo stock para " + nombre + " (" + unidadMedida + "):");
        
            if (inputStock == null || inputStock.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Stock no ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
            try {
                double nuevoStock = Double.parseDouble(inputStock);
            
                if (nuevoStock < 0) {
                    JOptionPane.showMessageDialog(this, "El stock no puede ser negativo.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            
                NuevoIngredienteDTO dto = new NuevoIngredienteDTO();
                dto.setNombre(nombre);
                dto.setUnidad_medida(unidadMedida);
            
                IngredienteBO ingredienteBO = FabricaIngredientes.crearIngredienteBO();
                ingredienteBO.actualizarIngredienteBO(dto, nuevoStock);
            
                formTabla.recargarTabla();
            
                JOptionPane.showMessageDialog(this, "Stock actualizado correctamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Por favor ingresa un número válido para el stock.", "Error", JOptionPane.ERROR_MESSAGE);
            } catch (NegocioException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error de negocio", JOptionPane.ERROR_MESSAGE);
            }   catch (Exception ex) {
                    Logger.getLogger(ModuloPrincipalIngredientes.class.getName()).log(Level.SEVERE, null, ex);
                }
    }//GEN-LAST:event_btnActualizarIngredienteActionPerformed

    private void btnEliminarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarIngredienteActionPerformed
          JTable tabla = formTabla.getTablaIngredientes();
    int filaSeleccionada = tabla.getSelectedRow();

    if (filaSeleccionada == -1) {
        JOptionPane.showMessageDialog(this, 
            "Selecciona un ingrediente de la tabla.", 
            "Advertencia", 
            JOptionPane.WARNING_MESSAGE
        );
        return;
    }

    String nombre = tabla.getValueAt(filaSeleccionada, 0).toString();
    String unidadMedida = tabla.getValueAt(filaSeleccionada, 1).toString();

    int confirmacion = JOptionPane.showConfirmDialog(
        this, 
        "¿Eliminar definitivamente " + nombre + " (" + unidadMedida + ")?",
        "Confirmar eliminación",
        JOptionPane.YES_NO_OPTION
    );

    if (confirmacion != JOptionPane.YES_OPTION) {
        return;
    }

    try {
        NuevoIngredienteDTO dto = new NuevoIngredienteDTO();
        dto.setNombre(nombre);
        dto.setUnidad_medida(unidadMedida);
        
        IngredienteBO ingredienteBO = FabricaIngredientes.crearIngredienteBO();

        if (ingredienteBO.tieneRelacionesActivasBO(nombre, unidadMedida)) {
            JOptionPane.showMessageDialog(
                this, 
                "No se puede eliminar: El ingrediente está en uso por uno o más productos.", 
                "Error", 
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }

        ingredienteBO.eliminarIngredienteBO(dto);
        
        formTabla.recargarTabla();
        JOptionPane.showMessageDialog(
            this, 
            "Ingrediente eliminado exitosamente.", 
            "Éxito", 
            JOptionPane.INFORMATION_MESSAGE
        );

    } catch (NegocioException ex) {
        JOptionPane.showMessageDialog(
            this, 
            ex.getMessage(), 
            "Error de negocio", 
            JOptionPane.ERROR_MESSAGE
        );
    } catch (Exception ex) {
        Logger.getLogger(ModuloPrincipalIngredientes.class.getName())
              .log(Level.SEVERE, "Error al eliminar ingrediente", ex);
        JOptionPane.showMessageDialog(
            this, 
            "Ocurrió un error inesperado.", 
            "Error", 
            JOptionPane.ERROR_MESSAGE
        );
    }
    }//GEN-LAST:event_btnEliminarIngredienteActionPerformed

    private void btnAgregarIngredienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarIngredienteActionPerformed

AgregarIngrediente ventanaAgregar = new AgregarIngrediente(formTabla);
ventanaAgregar.setVisible(true);


    }//GEN-LAST:event_btnAgregarIngredienteActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarIngrediente;
    private javax.swing.JButton btnAgregarIngrediente;
    private javax.swing.JButton btnEliminarIngrediente;
    private javax.swing.JLabel lblIngredientes;
    private javax.swing.JPanel pnlFormIngredientes;
    // End of variables declaration//GEN-END:variables
}
